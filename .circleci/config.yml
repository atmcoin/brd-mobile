# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
defaults: &defaults
  docker:
    - image: circleci/android:api-30-ndk
  working_directory: ~/brd-mobile
  resource_class: medium+

  environment:
    SDK_FILENAME: sdk-tools-linux-4333796.zip
    ANDROID_HOME: /opt/android/sdk

version: 2.1

commands:
  # Default init command
  default-project-setup:
    steps:
      - checkout
      - pull-submodules
      - setup-flutter
      - refresh-gradle

  # Pull submodules command
  pull-submodules:
    steps:
      # Pull submodules
      - run:
          name: Pull submodules
          command: |
            git submodule update --init --recursive

  # Refresh gradle command
  refresh-gradle:
    steps:
      # Restore cache - Gradle
      - restore_cache:
          name: Restoring cache - Gradle
          keys:
            - v1-dependencies-{{ checksum "brd-android/build.gradle.kts" }}-{{ checksum "brd-android/app/build.gradle.kts" }}

      # Refresh gradle
      - run:
          name: Refresh gradle
          command: |
            ./gradlew   dependencies

      # save cache - Gradle
      - save_cache:
          name: Saving cache - Gradle
          key: v1-dependencies-{{ checksum "brd-android/build.gradle.kts" }}-{{ checksum "brd-android/app/build.gradle.kts" }}
          paths:
            - ~/.gradle

  # Setup Flutter SDK command
  setup-flutter:
    steps:
      # Restore cache - Flutter SDK
      - restore_cache:
          name: Restoring cache - Flutter SDK
          keys:
            - v1-flutter-sdk-{{ checksum "brd-android/kyc-flutter/.metadata" }}

      # Setup Flutter SDK
      - run:
          name: Setup Flutter SDK
          command: |
            export PATH="$PATH:$(pwd)/flutter-sdk/bin"

            # check if flutter-sdk folder exist
            if [ ! -d flutter-sdk ]; then
              export TARGET_SDK_COMMIT=$(awk '/revision:/ {print $2}' brd-android/kyc-flutter/.metadata)
              git clone https://github.com/flutter/flutter.git flutter-sdk
              cd flutter-sdk
              git checkout $TARGET_SDK_COMMIT
              cd ..
              flutter precache
              flutter doctor
            fi

            cd brd-android/kyc-flutter
            flutter clean
            flutter pub get

      # save cache - Flutter SDK
      - save_cache:
          name: Saving cache - Flutter SDK
          key: v1-flutter-sdk-{{ checksum "brd-android/kyc-flutter/.metadata" }}
          paths:
            - flutter-sdk

jobs:
  # Test job (run tests & generate Jacoco report)
  test:
    <<: *defaults
    steps:
      # Setup project
      - default-project-setup

      # Unit tests
      - run:
          name: Run unit tests
          command: |
            ./gradlew  --console=plain  testBrdTestnetDebugUnitTest

      # Generate Jacoco report
      - run:
          name: Generate Jacoco report
          command: |
            ./gradlew  --console=plain :brd-android:app:jacocoTestReport

  # Release job (build apk and aab)
  release:
    <<: *defaults
    steps:
      # Setup project
      - default-project-setup

      # Prepare keystore
      - run:
          name: Prepare keystore
          command: |
            mkdir /home/circleci/key
            echo $release_keystore > /home/circleci/key/base64
            base64 -d /home/circleci/key/base64 > /home/circleci/key/keystore
            ls -la /home/circleci/key

      # Build apk
      - run:
          name: Build release apk
          command: |
            ./gradlew --console=plain brd-android:app:assembleBrdRelease  -Pandroid.injected.signing.store.file='/home/circleci/key/keystore' -Pandroid.injected.signing.store.password=$release_password -Pandroid.injected.signing.key.alias='key0' -Pandroid.injected.signing.key.password=$release_sign_password

      # Build app bundles
      - run:
          name: Build release aab
          command: |
            ./gradlew --console=plain brd-android:app:bundleBrdRelease  -Pandroid.injected.signing.store.file='/home/circleci/key/keystore' -Pandroid.injected.signing.store.password=$release_password -Pandroid.injected.signing.key.alias='key0' -Pandroid.injected.signing.key.password=$release_sign_password

workflows:
  test_and_build:
    jobs:
      - test
      - release:
          filters:
            branches:
              only:
                - /release\/.*/
                - rok/circleci-setup
          requires:
            - test

